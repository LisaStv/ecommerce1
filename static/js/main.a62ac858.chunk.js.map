{"version":3,"sources":["BtnGrigio.js","SingleCard.js","ButtonGrp.js","Search.js","Bar.js","App.js","reportWebVitals.js","index.js"],"names":["CustomButtonRoot","styled","CustomButton","props","ButtonUnstyled","component","BtnGrigio","Stack","spacing","direction","Item","Paper","theme","typography","body2","padding","textAlign","color","palette","text","secondary","SingleCard","nome","prezzo","stock","Grid","item","xs","md","Card","variant","CardMedia","height","image","alt","CardContent","Typography","sx","mb","CardActions","ButtonGrp","toggle","select","selected","setSelected","Box","display","flexDirection","alignItems","m","ButtonGroup","size","Button","onClick","Searcher","cerca","setText","container","align","justify","TextField","className","id","label","onChange","e","target","value","Bar","useState","flexGrow","py","lg","width","Divider","App","products","arrProds","setArrProds","searchQuery","setSearchQuery","content","newArr","filter","prodx","inStockFilterIn","availability","outStockFilterOut","console","log","prod","name","toLowerCase","includes","map","produ","price","current","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a62ac858.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Stack from '@mui/material/Stack';\r\nimport ButtonUnstyled from '@mui/core/ButtonUnstyled';\r\nimport { styled } from '@mui/system';\r\n\r\nconst CustomButtonRoot = styled('button')(`\r\n  background-color: #ebeced;\r\n  padding: 10px 15px;\r\n  border-radius: 30px;\r\n  color: black;\r\n  font-family: Helvetica, Arial, sans-serif;\r\n  font-size: 13px;\r\n  transition: all 200ms ease;\r\n  box-shadow: 0 4px 20px 0 rgba(61, 71, 82, 0.1), 0 0 0 0 rgba(0, 127, 255, 0);\r\n  border: none;\r\n`);\r\n\r\nfunction CustomButton(props) {\r\n  return <ButtonUnstyled {...props} component={CustomButtonRoot} />;\r\n}\r\n\r\nexport default function BtnGrigio() {\r\n  return (\r\n    <Stack spacing={2} direction=\"row\">\r\n      <CustomButton>In stock</CustomButton>\r\n    </Stack>\r\n  );\r\n}","import * as React from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport BtnGrigio from \"./BtnGrigio.js\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: \"start\",\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nexport default function SingleCard({nome, prezzo, stock}) {\r\n  return (\r\n      <Grid item xs={3} md={3}>\r\n        <Item>\r\n          <Card variant=\"outlined\">\r\n            <React.Fragment>\r\n              <CardMedia\r\n                component=\"img\"\r\n                height=\"194\"\r\n                image=\"https://mui.com/static/images/cards/paella.jpg\"\r\n                alt=\"Paella dish\"\r\n              />\r\n              <CardContent>\r\n                <Typography variant=\"h4\" component=\"div\">\r\n                  {nome}\r\n                </Typography>\r\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                  $ {prezzo}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                {stock > 0 && <BtnGrigio />}\r\n              </CardActions>\r\n            </React.Fragment>\r\n          </Card>\r\n        </Item>\r\n    </Grid>\r\n  );}","import \"./App.css\";\r\nimport * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\n\r\nexport default function ButtonGrp({toggle, select, selected, setSelected}) {\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        \"& > *\": {\r\n          m: 1,\r\n        },\r\n      }}\r\n    >\r\n      <ButtonGroup size=\"small\" aria-label=\"small button group\">\r\n        <Button key=\"one\" onClick={() => { toggle(\"in\"); {setSelected(\"in\")};}} variant={selected === \"in\" ? \"contained\" : \"outlined\"}>\r\n          IN STOCK\r\n        </Button>\r\n        ,\r\n        <Button key=\"two\" onClick={() => { toggle(\"out\"); select(\"out\");}} variant={selected === \"out\" ? \"contained\" : \"outlined\"}>\r\n          OUT OF STOCK\r\n        </Button>\r\n        ,\r\n        <Button key=\"three\" onClick={() => { toggle(\"all\"); select(\"all\");}} variant={selected === \"all\" ? \"contained\" : \"outlined\"}>\r\n          ALL\r\n        </Button>\r\n        ,\r\n      </ButtonGroup>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport default function Searcher({cerca, text, setText}) {\r\n\r\n  return (\r\n    <Grid\r\n    container\r\n    align=\"center\"\r\n    justify=\"center\"\r\n  >    <TextField\r\n      className=\"input\"\r\n      // value={term}\r\n      id=\"outlined-basic\"\r\n      label=\"Outlined\"\r\n      onChange={(e) => {\r\n        cerca(e.target.value);\r\n        setText(e.target.value);\r\n      }}\r\n      value={text}\r\n    />\r\n            {/* <Stack spacing={2} direction=\"row\"> */}\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={(text) => {\r\n                  cerca(\"\");\r\n                  setText(\"\");\r\n                }}\r\n              >\r\n                Reset\r\n              </Button>\r\n            {/* </Stack> */}\r\n\r\n\r\n  </Grid>  );\r\n}\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport ButtonGrp from \"./ButtonGrp.js\";\r\nimport Searcher from \"./Search.js\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Divider from '@mui/material/Divider';\r\n\r\n\r\nexport default function Bar({ toggle, cerca, select, selected, setSelected }) {\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <React.Fragment>\r\n      <Box sx={{ flexGrow: 1, alignItems: \"center\", py: 2, display: \"flex\" }}>\r\n        <Grid \r\n            container\r\n            spacing={0}\r\n        >\r\n          <Grid item lg={1}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              width=\"50\"\r\n              height=\"50\"\r\n              image=\"https://mui.com/static/images/cards/paella.jpg\"\r\n              alt=\"Paella dish\"\r\n            />{\" \"}\r\n          </Grid>\r\n          <Grid item lg={2}></Grid>\r\n          <Grid item lg={5}>\r\n            <ButtonGrp\r\n              toggle={toggle}\r\n              select={select}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4}>\r\n            <Searcher text={text} cerca={cerca} setText={setText} />\r\n          </Grid>\r\n          <Divider />\r\n        </Grid>\r\n      </Box>\r\n\r\n      {/* </Container> */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport SingleCard from \"./SingleCard.js\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Bar from \"./Bar.js\";\r\nimport products from \"./products.json\";\r\n\r\nfunction App() {\r\n  const [arrProds, setArrProds] = useState(products);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [selected, setSelected] = useState(\"all\");\r\n\r\n  function select(value) {\r\n    setSelected(value);\r\n    console.log(selected);\r\n  }\r\n\r\n  function cerca(text) {\r\n    setSearchQuery(text);\r\n    console.log(searchQuery);\r\n  }\r\n\r\n  const toggle = (value) => {\r\n    var newArr = products.filter((prodx) => {\r\n      const inStockFilterIn = value === \"in\" && prodx.availability.stock > 0;\r\n      const outStockFilterOut = value === \"out\" && prodx.availability.stock <= 0\r\n      return value === \"all\" || inStockFilterIn || outStockFilterOut \r\n            \r\n    });\r\n    setArrProds(newArr);\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Bar\r\n        content=\"text\"\r\n        toggle={toggle}\r\n        cerca={cerca}\r\n        select={select}\r\n        selected={selected}\r\n        setSelected={setSelected}\r\n        \r\n      />\r\n      {/* cerca={props.searchQuery} */}\r\n      {/* <Bar content=\"text\" toggle={(value) => toggle(value)} cerca={handleQuery} /> */}\r\n      <Grid container>\r\n        {arrProds\r\n          .filter((prod) =>\r\n            prod.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n          )\r\n          .map((produ) => (\r\n            // {arrProds.filter(prod => prod.name.toLowerCase().includes(props.handleQuery.toLowerCase())).map((produ) => (\r\n\r\n            <SingleCard\r\n              nome={produ.name}\r\n              prezzo={produ.price.current.value}\r\n              stock={produ.availability.stock}\r\n            />\r\n          ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ReactDOM.render(<App />, document.querySelector('#app'));\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}